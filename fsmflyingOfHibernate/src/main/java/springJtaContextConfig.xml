<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd       
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        ">

	<context:component-scan base-package="com.fsmflying" />


	<!-- 自动加载属性配置文件 -->
	<context:property-placeholder location="classpath:jtajdbc.properties" />

	<!-- mysql数据源 -->
    <bean id="master" class="com.atomikos.jdbc.AtomikosDataSourceBean"
        init-method="init" destroy-method="close">
        <description>master xa datasource</description>
        <property name="uniqueResourceName">
            <value>master</value>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
        <property name="xaProperties">
            <props>
                <prop key="user">${master.username}</prop>
                <prop key="password">${master.password}</prop>
                <prop key="URL">${master.url}</prop>
            </props>
        </property>     
        <property name="poolSize" value="10"/> 
    </bean>

    <bean id="slave" class="com.atomikos.jdbc.AtomikosDataSourceBean"
        init-method="init" destroy-method="close">
        <description>slave xa datasource</description>
        <property name="uniqueResourceName">
            <value>slave</value>
        </property>
        <property name="xaDataSourceClassName">
            <value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
        </property>
        <property name="xaProperties">
            <props>
                <prop key="user">${slave.username}</prop>
                <prop key="password">${slave.password}</prop>
                <prop key="URL">${slave.url}</prop>
            </props>
        </property>     
        <property name="poolSize" value="10"/>
    </bean>
	
	<!-- atomikos事务管理器 -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
        init-method="init" destroy-method="close">
        <description>UserTransactionManager</description>
        <property name="forceShutdown">
            <value>true</value>
        </property>
    </bean>
    
	<!-- 用于那些没有应用服务器或编程式的事务-->
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>
    
    <!-- spring 事务管理器 -->
    <bean id="springTransactionManager"
        class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager">
            <ref bean="atomikosTransactionManager" />
        </property>
        <property name="userTransaction">
            <ref bean="atomikosUserTransaction" />
        </property>
    </bean>

    <!-- spring　事务模板 -->
    <bean id="transactionTemplate"
        class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="springTransactionManager" />
        </property>
    </bean>  

    <bean id="masterJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="master" />
        </constructor-arg>
    </bean>

    <bean id="slaveJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="slave" />
        </constructor-arg>
    </bean>

    <context:annotation-config />   
    <tx:annotation-driven transaction-manager="springTransactionManager"/>  
    <context:component-scan base-package="com.roden.jta" /> 
    
    
    
	<!--
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${sysadmin.driverClassName}" />
		<property name="url" value="${sysadmin.url}" />
		<property name="username" value="${sysadmin.username}" />
		<property name="password" value="${sysadmin.password}" />
	</bean>  -->
	
	<!--  
	<bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${sysadmin.driverClassName}" />
		<property name="url" value="${sysadmin.url}" />
		<property name="username" value="${sysadmin.username}" />
		<property name="password" value="${sysadmin.password}" />
	</bean>
	-->
	
	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.fsmflying.sys.dm.SysUser</value>
				<value>com.fsmflying.sys.dm.SysRole</value>
				<value>com.fsmflying.sys.dm.SysDictDir</value>
				<value>com.fsmflying.sys.dm.SysDictItem</value>
				<value>com.fsmflying.sys.dm.SysCompany</value>
				<value>com.fsmflying.sys.dm.SysDepartment</value>
				<value>com.fsmflying.sys.dm.SysEmployee</value>
				<value>com.fsmflying.sys.dm.SysConfig</value>
				<value>com.fsmflying.sys.dm.SysCustomPage</value>
				<value>com.fsmflying.sys.dm.SysDataAuth</value>
				<value>com.fsmflying.sys.dm.SysDataAuthItem</value>
				<value>com.fsmflying.sys.dm.SysFile</value>
				<value>com.fsmflying.sys.dm.SysTab</value>
				<value>com.fsmflying.sys.dm.SysMenu</value>
				<value>com.fsmflying.sys.dm.SysFuncPoint</value>
			</list>
		</property>
		<property name="annotatedPackages">
			<list>
				<value>com.fsmflying.sys.dm</value>
			</list>
		</property>
		<property name="mappingResources">
			<list>
				<!--<value>SysUser.hbm.xml</value>-->
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
                
                <!--  
                <property name="current_session_context_class">thread</property>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
                -->
                <prop key="hibernate.current_session_context_class">thread</prop>
                
                <!-- hibernate 3 -->
                <prop key="cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <!-- hibernate 4 -->
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                
			</props>
			
		</property>
	</bean>
	
	 <!-- The transaction manager 
    <tx:annotation-driven transaction-manager="transactionManager" />
    -->
    
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory" />
    </bean>
    
    
    
    <!--  
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"/>
	</bean>
    -->
    
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    
    
    
    <aop:config>
        <aop:pointcut id="myServicePointcut" expression="execution(* com.fsmflying..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myServicePointcut"/>
    </aop:config>

    
    <bean id="systemManageService" class="com.fsmflying.hibernate.service.impl.SystemManageServiceImpl">
		<property name="sessionFactory" ref="mySessionFactory"/>
	</bean>
	
	<bean id="configService" class="com.fsmflying.hibernate.service.impl.ConfigServiceImpl" >
		<property name="sessionFactory" ref="mySessionFactory"></property>
	</bean>
	
	<bean id="sequenceService" class="com.fsmflying.hibernate.service.impl.SequenceServiceImpl">
		<property name="sessionFactory" ref="mySessionFactory"></property>
	</bean>
	
	<bean id="logService" class="com.fsmflying.hibernate.service.impl.LogServiceImpl">
		<property name="sessionFactory" ref="mySessionFactory"/>
	</bean>
	
</beans>
